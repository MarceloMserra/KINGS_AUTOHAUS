<!-- This file will be rendered inside the {{{body}}} of the layout.hbs -->

<style>
    /* Styles specific to the public car list page */
    html, body {
        height: 100%; /* Ensure html and body take full height */
        margin: 0;
        padding: 0;
        background-color: #000000; /* Ensure html background is black for full coverage */
    }

    body {
        color: #ffffff; /* Default text color for contrast */
        /* Specific background image for this page */
        background-image: url('/images/fotocapa2.png'); /* Your desired background image */
        background-repeat: no-repeat;
        background-attachment: fixed; /* Parallax effect */
        background-size: cover; /* Cover the entire viewport */
        background-position: center; /* Center the background image */
    }

    .container {
        padding-top: 30px;
        padding-bottom: 30px;
        background-color: rgba(0, 0, 0, 0.7); /* Semi-transparent black background for content area */
        border-radius: 10px;
        margin-bottom: 50px; /* Space from bottom */
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5); /* Re-added box-shadow for container */
    }

    h2.section-title-public {
        color: #ffffff; /* White title for public sections */
        font-size: 3rem;
        font-weight: bold;
        margin-bottom: 50px;
        position: relative;
        padding-bottom: 15px;
        text-align: center;
    }

    h2.section-title-public::after {
        content: '';
        position: absolute;
        left: 50%;
        bottom: 0;
        transform: translateX(-50%);
        height: 4px;
        width: 100px;
        background-color: #05FC04; /* Green line */
        border-radius: 5px;
    }

    /* Styles for the filter/sort bar on the inventory page - NEW COMPACT LAYOUT */
    .inventory-controls {
        background-color: rgba(255, 255, 255, 0.05); /* Lighter transparent background */
        border: 1px solid rgba(255, 255, 255, 0.1);
        padding: 15px; /* Reduced padding */
        border-radius: 10px;
        margin-bottom: 30px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        display: flex;
        flex-wrap: wrap;
        justify-content: center; /* Center items for better look */
        align-items: center;
        gap: 10px; /* Space between filter items */
    }

    .inventory-controls .form-group {
        margin-bottom: 0; /* Remove default margin-bottom */
        flex-grow: 1; /* Allow form groups to grow */
        min-width: 120px; /* Minimum width for form controls */
    }

    .inventory-controls .form-control,
    .inventory-controls .btn {
        background-color: rgba(0, 0, 0, 0.6);
        color: #ffffff;
        border: 1px solid #05FC04;
        border-radius: 5px;
        padding: 8px 10px; /* Adjusted padding */
        width: 100%; /* Ensure full width within their flex-basis */
        font-size: 0.9rem; /* Smaller font size for compactness */
    }

    .inventory-controls .form-control:focus {
        background-color: rgba(0, 0, 0, 0.8);
        border-color: #05FC04;
        box-shadow: 0 0 0 0.2rem rgba(5, 252, 4, 0.25);
    }

    .inventory-controls .btn-primary-custom,
    .inventory-controls .btn-dark-custom {
        padding: 8px 15px; /* Adjust button padding */
        font-size: 0.9rem;
        white-space: nowrap; /* Prevent text wrapping */
    }

    .inventory-controls .btn-dark-custom {
        background-color: #333333;
        border-color: #333333;
        color: #ffffff;
    }
    .inventory-controls .btn-dark-custom:hover {
        background-color: #555555;
        border-color: #555555;
    }

    /* New Card styles for the inventory list - LIST VIEW */
    .car-inventory-item {
        background-color: #1a1a1a; /* Darker background for each car item */
        border: 1px solid #333333; /* Subtle border */
        color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        margin-bottom: 20px; /* Space between items */
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        display: flex; /* Use flexbox for horizontal layout */
        flex-direction: row; /* Image left, details right */
        overflow: hidden;
    }

    .car-inventory-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(5, 252, 4, 0.15); /* Green glow on hover */
    }

    .car-image-col {
        flex: 0 0 350px; /* Increased fixed width for image column on desktop */
        max-width: 350px;
        height: 250px; /* Increased fixed height for image */
        overflow: hidden;
        position: relative;
        background-color: #0a0a0a; /* Added dark background for image column */
    }

    .car-image-col img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
    }

    .car-details-col {
        flex-grow: 1; /* Take remaining space */
        padding: 20px 25px; /* Increased padding */
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .car-title-main {
        font-size: 2rem; /* Larger title */
        font-weight: bold;
        color: #05FC04;
        margin-bottom: 5px;
    }

    .car-subtitle-main {
        font-size: 1.2rem; /* Larger subtitle */
        color: rgba(255, 255, 255, 0.8);
        margin-bottom: 15px;
    }

    .car-main-specs {
        display: flex;
        flex-wrap: wrap;
        gap: 10px 20px; /* Adjusted gap */
        list-style: none;
        padding: 0;
        margin-bottom: 15px;
    }

    .car-main-specs li {
        font-size: 1rem; /* Larger font size */
        color: rgba(255, 255, 255, 0.9);
        display: flex;
        align-items: center;
        white-space: nowrap; /* Prevent breaking */
    }

    .car-main-specs i {
        color: #05FC04;
        margin-right: 8px;
        width: 20px;
        text-align: center;
    }

    .car-main-specs strong {
        color: #ffffff;
    }

    .car-price-section-list {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 15px;
        padding-top: 15px;
        border-top: 1px dashed #333333;
    }

    .price-display-list {
        font-size: 2.5rem; /* Larger price display */
        font-weight: bold;
        color: #05FC04;
    }

    .list-action-buttons {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        justify-content: flex-end;
    }

    .list-action-buttons .btn {
        background-color: #333333;
        border-color: #333333;
        color: #ffffff;
        font-weight: bold;
        padding: 10px 20px; /* Larger padding for buttons */
        border-radius: 5px;
        font-size: 1rem; /* Larger font size for buttons */
        transition: all 0.3s ease;
    }

    .list-action-buttons .btn:hover {
        background-color: #555555;
        border-color: #555555;
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .list-action-buttons .btn-primary-action {
        background-color: #05FC04;
        border-color: #05FC04;
        color: #000000;
    }

    .list-action-buttons .btn-primary-action:hover {
        background-color: #04D803;
        border-color: #04D803;
        color: #ffffff;
    }

    /* Badges */
    .photo-count-badge {
        background-color: #05FC04 !important;
        color: #000000 !important;
        font-weight: bold;
        position: absolute;
        top: 10px;
        right: 10px;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.8rem;
        z-index: 5;
    }

    .new-badge {
        background-color: #17a2b8 !important;
        color: #ffffff !important;
        font-weight: bold;
        position: absolute;
        top: 10px;
        left: 10px;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.8rem;
        z-index: 5;
    }

    .featured-badge {
        background-color: #ffc107 !important;
        color: #000000 !important;
        font-weight: bold;
        position: absolute;
        top: 40px;
        left: 10px;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.8rem;
        z-index: 5;
    }

    /* Pagination styles */
    .pagination-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 30px;
        margin-bottom: 30px;
        color: #ffffff;
        font-size: 1.1rem;
    }

    .pagination-controls .btn-page-nav {
        background-color: #333333;
        border-color: #333333;
        color: #ffffff;
        padding: 8px 15px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }
    .pagination-controls .btn-page-nav:hover {
        background-color: #555555;
        border-color: #555555;
    }

    .pagination-controls select {
        background-color: rgba(0, 0, 0, 0.6);
        color: #ffffff;
        border: 1px solid #05FC04;
        border-radius: 5px;
        padding: 8px 15px;
    }

    /* Responsive adjustments */
    @media (max-width: 991.98px) { /* Tablets and smaller desktops */
        .car-image-col {
            flex: 0 0 100%; /* Image takes full width on smaller screens */
            max-width: 100%;
            height: 250px; /* Adjust height for mobile */
            border-bottom-left-radius: 0;
            border-top-right-radius: 10px;
        }
        .car-image-col img {
            border-bottom-left-radius: 0;
            border-top-right-radius: 10px;
        }
        .car-inventory-item {
            flex-direction: column; /* Stack image and details vertically */
        }
        .car-details-col {
            padding: 15px;
        }
        .car-title-main {
            font-size: 1.5rem;
        }
        .car-subtitle-main {
            font-size: 1rem;
        }
        .car-main-specs {
            flex-direction: column; /* Stack specs vertically */
            gap: 5px;
        }
        .car-price-section-list {
            flex-direction: column; /* Stack price and buttons vertically */
            align-items: flex-start;
            gap: 10px;
        }
        .list-action-buttons {
            width: 100%;
            justify-content: flex-start;
        }
        .list-action-buttons .btn {
            flex-grow: 1; /* Buttons take full width */
        }
    }

    @media (max-width: 767.98px) { /* Smaller phones */
        .car-image-col {
            height: 200px;
        }
        .car-title-main {
            font-size: 1.3rem;
        }
        .car-subtitle-main {
            font-size: 0.9rem;
        }
        .car-main-specs li {
            font-size: 0.9rem;
        }
        .price-display-list {
            font-size: 1.8rem;
        }
        .list-action-buttons .btn {
            font-size: 0.85rem;
            padding: 10px;
        }
    }

    @media (max-width: 575.98px) { /* Extra small phones */
        .car-image-col {
            height: 180px;
        }
        .car-title-main {
            font-size: 1.2rem;
        }
        .car-subtitle-main {
            font-size: 0.85rem;
        }
        .car-main-specs li {
            font-size: 0.85rem;
        }
        .price-display-list {
            font-size: 1.6rem;
        }
    }
</style>

<section id="carmodels" class="py-5">
    <div class="container">
        <h2 class="section-title-public text-center">Available Cars</h2>

        <!-- Inventory Controls (Filters and Sort) -->
        <div class="inventory-controls">
            <div class="form-group">
                <label for="makeFilter" class="sr-only">Make</label>
                <select class="form-control" id="makeFilter" name="make">
                    <option value="">All Makes</option>
                    {{#each filters.brands}}
                        <option value="{{this}}" {{#if (eq ../currentFilters.make this)}}selected{{/if}}>{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <label for="modelFilter" class="sr-only">Model</label>
                <select class="form-control" id="modelFilter" name="model" disabled>
                    <option value="">All Models</option>
                </select>
            </div>
            <div class="form-group">
                <label for="minPrice" class="sr-only">Min Price</label>
                <select class="form-control" id="minPrice" name="minPrice">
                    <option value="">Min Price</option>
                    <option value="10000" {{#if (eq currentFilters.minPrice "10000")}}selected{{/if}}>$10,000</option>
                    <option value="20000" {{#if (eq currentFilters.minPrice "20000")}}selected{{/if}}>$20,000</option>
                    <option value="30000" {{#if (eq currentFilters.minPrice "30000")}}selected{{/if}}>$30,000</option>
                    <option value="40000" {{#if (eq currentFilters.minPrice "40000")}}selected{{/if}}>$40,000</option>
                    <option value="50000" {{#if (eq currentFilters.minPrice "50000")}}selected{{/if}}>$50,000</option>
                    <option value="75000" {{#if (eq currentFilters.minPrice "75000")}}selected{{/if}}>$75,000</option>
                    <option value="100000" {{#if (eq currentFilters.minPrice "100000")}}selected{{/if}}>$100,000</option>
                </select>
            </div>
            <div class="form-group">
                <label for="maxPrice" class="sr-only">Max Price</label>
                <select class="form-control" id="maxPrice" name="maxPrice">
                    <option value="">Max Price</option>
                    <option value="20000" {{#if (eq currentFilters.maxPrice "20000")}}selected{{/if}}>$20,000</option>
                    <option value="30000" {{#if (eq currentFilters.maxPrice "30000")}}selected{{/if}}>$30,000</option>
                    <option value="40000" {{#if (eq currentFilters.maxPrice "40000")}}selected{{/if}}>$40,000</option>
                    <option value="50000" {{#if (eq currentFilters.maxPrice "50000")}}selected{{/if}}>$50,000</option>
                    <option value="75000" {{#if (eq currentFilters.maxPrice "75000")}}selected{{/if}}>$75,000</option>
                    <option value="100000" {{#if (eq currentFilters.maxPrice "100000")}}selected{{/if}}>$100,000</option>
                    <option value="200000" {{#if (eq currentFilters.maxPrice "200000")}}selected{{/if}}>$200,000</option>
                </select>
            </div>
            <div class="form-group">
                <label for="minYear" class="sr-only">Min Year</label>
                <select class="form-control" id="minYear" name="minYear">
                    <option value="">Min Year</option>
                    {{#each (range filters.yearRange.maxYear filters.yearRange.minYear)}}
                        <option value="{{this}}" {{#if (eq ../currentFilters.minYear this)}}selected{{/if}}>{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <label for="maxYear" class="sr-only">Max Year</label>
                <select class="form-control" id="maxYear" name="maxYear">
                    <option value="">Max Year</option>
                    {{#each (range filters.yearRange.maxYear filters.yearRange.minYear)}}
                        <option value="{{this}}" {{#if (eq ../currentFilters.maxYear this)}}selected{{/if}}>{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <label for="transmission" class="sr-only">Transmission</label>
                <select class="form-control" id="transmission" name="transmission">
                    <option value="">All Transmissions</option>
                    {{#each filters.transmissions}}
                        <option value="{{this}}" {{#if (eq ../currentFilters.transmission this)}}selected{{/if}}>{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <label for="color" class="sr-only">Color</label>
                <select class="form-control" id="color" name="color">
                    <option value="">All Colors</option>
                    {{#each filters.colors}}
                        <option value="{{this}}" {{#if (eq ../currentFilters.color this)}}selected{{/if}}>{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <label for="sortBy" class="sr-only">Sort By</label>
                <select class="form-control" id="sortBy" name="sortBy">
                    <option value="date-desc" {{#if (eq currentFilters.sortBy "date-desc")}}selected{{/if}}>Sort By: Newest</option>
                    <option value="price-asc" {{#if (eq currentFilters.sortBy "price-asc")}}selected{{/if}}>Sort By: Price Low to High</option>
                    <option value="price-desc" {{#if (eq currentFilters.sortBy "price-desc")}}selected{{/if}}>Sort By: Price High to Low</option>
                    <option value="year-desc" {{#if (eq currentFilters.sortBy "year-desc")}}selected{{/if}}>Sort By: Year Newest</option>
                    <option value="year-asc" {{#if (eq currentFilters.sortBy "year-asc")}}selected{{/if}}>Sort By: Year Oldest</option>
                </select>
            </div>
            <div class="form-group">
                <label for="perPage" class="sr-only">Per Page</label>
                <select class="form-control" id="perPage" name="perPage">
                    <option value="12" {{#if (eq currentFilters.perPage "12")}}selected{{/if}}>Show: 12</option>
                    <option value="24" {{#if (eq currentFilters.perPage "24")}}selected{{/if}}>Show: 24</option>
                    <option value="48" {{#if (eq currentFilters.perPage "48")}}selected{{/if}}>Show: 48</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary-custom">Apply Filters</button>
            <button type="button" class="btn btn-dark-custom" onclick="window.location.href='/gas'">Clear Filters</button>
        </div>

        <!-- Pagination Controls (Top) -->
        <div class="pagination-controls">
            <span>Showing {{vehicles.length}} of {{pagination.totalCount}} vehicles | Page {{pagination.current}} of {{pagination.total}}</span>
            <div>
                <a href="/gas?page={{pagination.prev}}&make={{currentFilters.make}}&model={{currentFilters.model}}&minPrice={{currentFilters.minPrice}}&maxPrice={{currentFilters.maxPrice}}&minYear={{currentFilters.minYear}}&maxYear={{currentFilters.maxYear}}&transmission={{currentFilters.transmission}}&color={{currentFilters.color}}&sortBy={{currentFilters.sortBy}}&perPage={{currentFilters.perPage}}" class="btn btn-page-nav mr-2 {{#unless pagination.hasPrev}}disabled{{/unless}}"><i class="fas fa-chevron-left"></i> Prev</a>
                <a href="/gas?page={{pagination.next}}&make={{currentFilters.make}}&model={{currentFilters.model}}&minPrice={{currentFilters.minPrice}}&maxPrice={{currentFilters.maxPrice}}&minYear={{currentFilters.minYear}}&maxYear={{currentFilters.maxYear}}&transmission={{currentFilters.transmission}}&color={{currentFilters.color}}&sortBy={{currentFilters.sortBy}}&perPage={{currentFilters.perPage}}" class="btn btn-page-nav {{#unless pagination.hasNext}}disabled{{/unless}}">Next <i class="fas fa-chevron-right"></i></a>
            </div>
        </div>

        {{#if vehicles.length}}
        <div class="row">
            {{#each vehicles}}
            <div class="col-12">
                <a href="/gas/details/{{this._id}}" class="car-card-link">
                    <div class="car-inventory-item">
                        <div class="car-image-col">
                            {{#if this.image.length}}
                                <img src="{{this.image.[0]}}" alt="{{this.brand}} {{this.t2}}">
                                {{#if (gt this.image.length 1)}}
                                    <span class="badge badge-secondary photo-count-badge">
                                        {{this.image.length}} <i class="fas fa-camera"></i>
                                    </span>
                                {{/if}}
                                {{!-- Example: Add NEW or FEATURED badges based on car data --}}
                                {{#if (eq this.status 'new')}}
                                    <span class="badge badge-info new-badge">NEW</span>
                                {{/if}}
                                {{#if this.featured}}
                                    <span class="badge badge-warning featured-badge"><i class="fas fa-star"></i> FEATURED</span>
                                {{/if}}
                            {{else}}
                                <img src="https://placehold.co/300x200/0a0a0a/05FC04?text=No+Image" alt="No Image">
                            {{/if}}
                        </div>
                        <div class="car-details-col">
                            <div>
                                <h5 class="car-title-main">{{this.year}} {{this.brand}} {{this.t2}}</h5>
                                {{#if this.trim}}<p class="car-subtitle-main">{{this.trim}}</p>{{/if}}
                                <ul class="car-main-specs">
                                    <li><i class="fas fa-tachometer-alt"></i> <strong>Mileage:</strong> {{this.mileage}} miles</li>
                                    <li><i class="fas fa-engine"></i> <strong>Engine:</strong> {{this.engine}}L</li>
                                    <li><i class="fas fa-cogs"></i> <strong>Transmission:</strong> {{this.transmission}}</li>
                                    <li><i class="fas fa-car-side"></i> <strong>Body Type:</strong> {{this.body}}</li>
                                    <li><i class="fas fa-palette"></i> <strong>Color:</strong> {{this.colour}}</li>
                                    <li><i class="fas fa-fingerprint"></i> <strong>VIN:</strong> {{this.vin}}</li>
                                    <li><i class="fas fa-hashtag"></i> <strong>Stock#:</strong> {{this.stockNumber}}</li>
                                </ul>
                            </div>
                            <div class="car-price-section-list">
                                <p class="price-display-list">$ {{this.priceStr}}</p>
                                <div class="list-action-buttons">
                                    <button class="btn">Inquiry</button>
                                    <button class="btn">Schedule Test Drive</button>
                                    <a href="/financing" class="btn">Financing</a>
                                    <button class="btn btn-primary-action">Text Us</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            {{/each}}
        </div>

        <!-- Pagination Controls (Bottom) -->
        <div class="pagination-controls">
            <span>Showing {{vehicles.length}} of {{pagination.totalCount}} vehicles | Page {{pagination.current}} of {{pagination.total}}</span>
            <div>
                <a href="/gas?page={{pagination.prev}}&make={{currentFilters.make}}&model={{currentFilters.model}}&minPrice={{currentFilters.minPrice}}&maxPrice={{currentFilters.maxPrice}}&minYear={{currentFilters.minYear}}&maxYear={{currentFilters.maxYear}}&transmission={{currentFilters.transmission}}&color={{currentFilters.color}}&sortBy={{currentFilters.sortBy}}&perPage={{currentFilters.perPage}}" class="btn btn-page-nav mr-2 {{#unless pagination.hasPrev}}disabled{{/unless}}"><i class="fas fa-chevron-left"></i> Prev</a>
                <a href="/gas?page={{pagination.next}}&make={{currentFilters.make}}&model={{currentFilters.model}}&minPrice={{currentFilters.minPrice}}&maxPrice={{currentFilters.maxPrice}}&minYear={{currentFilters.minYear}}&maxYear={{currentFilters.maxYear}}&transmission={{currentFilters.transmission}}&color={{currentFilters.color}}&sortBy={{currentFilters.sortBy}}&perPage={{currentFilters.perPage}}" class="btn btn-page-nav {{#unless pagination.hasNext}}disabled{{/unless}}">Next <i class="fas fa-chevron-right"></i></a>
            </div>
        </div>

        {{else}}
        <div class="alert alert-warning-custom text-center" role="alert">
            No cars available with the selected filters.
        </div>
        {{/if}}

    </div>
</section>

<!-- JavaScript for dynamic Model filter and other functionalities -->
<script>
    // Converts the JSON string of modelsByBrand back to a JavaScript object
    let modelsByBrand = {};
    try {
        const modelsByBrandString = '{{{modelsByBrand}}}';
        modelsByBrand = JSON.parse(modelsByBrandString || '{}');
    } catch (e) {
        console.error("Error parsing models by brand JSON:", e);
        modelsByBrand = {};
    }

    const makeFilter = document.getElementById('makeFilter');
    const modelFilter = document.getElementById('modelFilter');
    const minPriceFilter = document.getElementById('minPrice');
    const maxPriceFilter = document.getElementById('maxPrice');
    const minYearFilter = document.getElementById('minYear');
    const maxYearFilter = document.getElementById('maxYear');
    const transmissionFilter = document.getElementById('transmission');
    const colorFilter = document.getElementById('color');
    const sortBy = document.getElementById('sortBy');
    const perPage = document.getElementById('perPage');
    const applyFiltersBtn = document.querySelector('.inventory-controls .btn-primary-custom');

    // Function to populate the model dropdown
    function populateModelFilter(selectedBrand) {
        modelFilter.innerHTML = '<option value="">All Models</option>'; // Clear previous options
        modelFilter.disabled = true; // Disable model filter by default

        if (selectedBrand && modelsByBrand[selectedBrand]) {
            modelsByBrand[selectedBrand].forEach(model => {
                const option = document.createElement('option');
                option.value = model;
                option.textContent = model;
                modelFilter.appendChild(option);
            });
            modelFilter.disabled = false; // Enable if models exist
        }
    }

    // Event listener for the make filter
    makeFilter.addEventListener('change', function() {
        populateModelFilter(this.value);
    });

    // Function to apply filters (redirects to /gas with query parameters)
    applyFiltersBtn.addEventListener('click', function(event) {
        event.preventDefault(); // Prevent default form submission
        const selectedMake = makeFilter.value;
        const selectedModel = modelFilter.value;
        const selectedMinPrice = minPriceFilter.value;
        const selectedMaxPrice = maxPriceFilter.value;
        const selectedMinYear = minYearFilter.value;
        const selectedMaxYear = maxYearFilter.value;
        const selectedTransmission = transmissionFilter.value;
        const selectedColor = colorFilter.value;
        const selectedSortBy = sortBy.value;
        const selectedPerPage = perPage.value;

        let queryString = [];
        if (selectedMake) queryString.push(`make=${selectedMake}`);
        if (selectedModel) queryString.push(`model=${selectedModel}`);
        if (selectedMinPrice) queryString.push(`minPrice=${selectedMinPrice}`);
        if (selectedMaxPrice) queryString.push(`maxPrice=${selectedMaxPrice}`);
        if (selectedMinYear) queryString.push(`minYear=${selectedMinYear}`);
        if (selectedMaxYear) queryString.push(`maxYear=${selectedMaxYear}`);
        if (selectedTransmission) queryString.push(`transmission=${selectedTransmission}`);
        if (selectedColor) queryString.push(`color=${selectedColor}`);
        if (selectedSortBy) queryString.push(`sortBy=${selectedSortBy}`);
        if (selectedPerPage) queryString.push(`perPage=${selectedPerPage}`);

        window.location.href = `/gas?${queryString.join('&')}`;
    });

    // Logic to pre-select filters if there are URL parameters on page load
    document.addEventListener('DOMContentLoaded', function() {
        const urlParams = new URLSearchParams(window.location.search);
        const initialMake = urlParams.get('make');
        const initialModel = urlParams.get('model');
        const initialMinPrice = urlParams.get('minPrice');
        const initialMaxPrice = urlParams.get('maxPrice');
        const initialMinYear = urlParams.get('minYear');
        const initialMaxYear = urlParams.get('maxYear');
        const initialTransmission = urlParams.get('transmission');
        const initialColor = urlParams.get('color');
        const initialSortBy = urlParams.get('sortBy');
        const initialPerPage = urlParams.get('perPage');

        if (initialMake) {
            makeFilter.value = initialMake;
            populateModelFilter(initialMake);
            if (initialModel) {
                setTimeout(() => {
                    modelFilter.value = initialModel;
                }, 50);
            }
        }
        if (initialMinPrice) minPriceFilter.value = initialMinPrice;
        if (initialMaxPrice) maxPriceFilter.value = initialMaxPrice;
        if (initialMinYear) minYearFilter.value = initialMinYear;
        if (initialMaxYear) maxYearFilter.value = initialMaxYear;
        if (initialTransmission) transmissionFilter.value = initialTransmission;
        if (initialColor) colorFilter.value = initialColor;
        if (initialSortBy) sortBy.value = initialSortBy;
        if (initialPerPage) perPage.value = initialPerPage;
    });

    // Handlebars Helper for range (needs to be registered in your Node.js app)
    // Example: Handlebars.registerHelper('range', function(from, to) { ... });
    // This is just a placeholder here, assuming it's handled server-side.

    // Pagination buttons click handler
    document.querySelectorAll('.btn-page-nav').forEach(button => {
        button.addEventListener('click', function(event) {
            event.preventDefault(); // Prevent default link behavior
            if (this.classList.contains('disabled')) {
                return; // Do nothing if button is disabled
            }

            const url = new URL(this.href);
            window.location.href = url.toString();
        });
    });

</script>
