<!-- This file will be rendered inside the {{{body}}} of the layout.hbs -->

<!-- All CSS styles for this page are now located in public/css/home.css -->

<!-- Hero Section with Image and Filters -->
<section class="hero-section">
    <!-- Replaced video with image -->
    <img src="/images/capa.png" alt="KINGS AUTOHAUS Background" class="hero-image">
    <div class="hero-overlay">
        <!-- New Hero Cards Container (with images and text) -->
        <div class="hero-cards-container row justify-content-center align-items-stretch mb-5">
            <div class="col-lg-4 col-md-6 col-sm-12 mb-4 d-flex">
                <a href="/financing" class="hero-card-link fade-in-up"> <!-- Link updated to /financing -->
                    <div class="hero-card">
                        <img src="/images/approved.jpg" alt="Get Approved" class="hero-card-image">
                        <div class="hero-card-text-content">
                            <h3>Get Approved</h3>
                            <p>Fast and easy pre-approval for your next vehicle.</p>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-4 col-md-6 col-sm-12 mb-4 d-flex">
                <a href="/gas" class="hero-card-link fade-in-up delay-1">
                    <div class="hero-card">
                        <img src="/images/inventario.png" alt="Our Inventory" class="hero-card-image">
                        <div class="hero-card-text-content">
                            <h3>Our Inventory</h3>
                            <p>Browse our extensive collection of luxury vehicles.</p>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-4 col-md-6 col-sm-12 mb-4 d-flex">
                <a href="https://www.google.com/maps/search/?api=1&query=123+Auto+Street,+Car+City,+State,+ZIP+12345" target="_blank" class="hero-card-link fade-in-up delay-2">
                    <div class="hero-card">
                        <img src="/images/rota.jpg" alt="Get Directions" class="hero-card-image">
                        <div class="hero-card-text-content">
                            <h3>Get Directions</h3>
                            <p>Find your way to our dealership with ease.</p>
                        </div>
                    </div>
                </a>
            </div>
        </div>

        <div class="filter-bar fade-in-up delay-3"> <!-- Adjusted delay -->
            <form action="/gas" method="GET" class="form-row align-items-center justify-content-center">
                <div class="form-group col-md-4 col-sm-12 mb-md-0">
                    <label for="makeFilter" class="sr-only">Make</label>
                    <select class="form-control form-control-lg" id="makeFilter" name="make">
                        <option value="">Make</option>
                        {{#each carBrands}}
                            <option value="{{this.name}}">{{this.name}} ({{this.count}})</option>
                        {{/each}}
                    </select>
                </div>
                <div class="form-group col-md-4 col-sm-12 mb-md-0">
                    <label for="modelFilter" class="sr-only">Model</label>
                    <select class="form-control form-control-lg" id="modelFilter" name="model" disabled>
                        <option value="">Model</option>
                    </select>
                </div>
                <div class="form-group col-md-4 col-sm-12 mb-0">
                    <button type="submit" class="btn btn-primary btn-lg">Search Cars</button>
                </div>
            </form>
        </div>
    </div>
</section>

<!-- Featured Vehicles Section - NOVO CARROSSEL INFINITO -->
<section id="featured-vehicles" class="featured-vehicles-section fade-in-up delay-4">
    <div class="container">
        <h2 class="section-title">Featured Vehicles</h2>
        
        <div class="featured-carousel-wrapper">
            <div class="featured-carousel-inner" id="featuredCarouselInner">
                {{#each latestCars}}
                <div class="featured-car-item {{#if @first}}active{{/if}}">
                    <div class="featured-car-card">
                        <div class="car-image-wrapper">
                            {{#if this.image.length}}
                                <img src="{{this.image.[0]}}" alt="{{this.brand}} {{this.t2}}" class="car-image">
                                {{#if (gt this.image.length 1)}}
                                    <span class="photo-badge">{{this.image.length}} photos</span>
                                {{/if}}
                            {{else}}
                                <img src="https://placehold.co/400x300/0a0a0a/05FC04?text=No+Image" alt="No Image" class="car-image">
                            {{/if}}
                        </div>
                        <div class="car-content">
                            <h5 class="car-title">{{this.brand}} {{this.t2}}</h5>
                            <p class="car-subtitle">{{this.year}} - {{this.mileage}} miles - {{this.transmission}}</p>
                            <p class="car-price">R$ {{this.priceStr}}</p>
                            <a href="/gas/details/{{this._id}}" class="view-details-btn">View Details</a>
                        </div>
                    </div>
                </div>
                {{/each}}
            </div>

            <!-- Controles de navegação -->
            <div class="carousel-controls">
                <button class="carousel-control prev" onclick="moveCarousel(-1)" aria-label="Previous">
                    <i class="fas fa-chevron-left"></i>
                </button>
            </div>
            <div class="carousel-controls">
                <button class="carousel-control next" onclick="moveCarousel(1)" aria-label="Next">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>

        <!-- Indicadores -->
        <div class="carousel-indicators" id="carouselIndicators">
            <!-- Será populado dinamicamente pelo JavaScript -->
        </div>

        <!-- Botão View All -->
        <div class="view-all-container">
            <a href="/gas" class="view-all-btn">View All Featured Vehicles</a>
        </div>
    </div>
</section>

<!-- About Us Section -->
<section id="about-us" class="fade-in-up delay-5"> <!-- Adjusted delay -->
    <div class="background-image-overlay"></div> <!-- New div for background image -->
    <div class="container content-wrapper">
        <h2 class="section-title text-center">About KINGS AUTOHAUS</h2>
        <div class="row align-items-center">
            <div class="col-md-12"> <!-- Changed to col-md-12 as image is now background -->
                <p class="lead">Welcome to KINGS AUTOHAUS, your trusted dealership for luxury and high-performance cars. With years of experience in the market, we are dedicated to offering an impeccable selection of vehicles that combine elegance, technology, and performance.</p>
                <p>Our mission is to provide an exceptional buying experience, with personalized and transparent service. We believe that finding your dream car should be an exciting and straightforward journey.</p>
            </div>
            <!-- Removed img tag as it's now a background -->
        </div>
        <div class="text-center mt-4">
            <a href="/about" class="btn btn-outline-primary btn-lg">Learn More About Us</a>
        </div>
    </div>
</section>

<!-- Testimonials Section -->
<section id="testimonials" class="fade-in-up delay-5"> <!-- Adjusted delay -->
    <div class="container">
        <h2 class="section-title text-center text-white">What Our Customers Say</h2>
        <div class="row justify-content-center">
            <div class="col-md-8">
                <!-- Testimonial 1 -->
                <blockquote class="blockquote text-white mb-4">
                    <p class="mb-0">"KINGS AUTOHAUS exceeded my expectations! I found my dream car with impeccable and transparent service. I highly recommend them!"</p>
                    <footer class="blockquote-footer text-muted">John Doe, <cite title="Satisfied Customer">Satisfied Customer</cite></footer>
                </blockquote>
                <!-- Testimonial 2 -->
                <blockquote class="blockquote text-white">
                    <p class="mb-0">"Easy and no-pressure buying process. The team was very helpful and found the perfect payment plan for me. Impeccable car!"</p>
                    <footer class="blockquote-footer text-muted">Jane Smith, <cite title="KINGS AUTOHAUS Client">KINGS AUTOHAUS Client</cite></footer>
                </blockquote>
            </div>
        </div>
    </div>
</section>

<!-- Financing Call to Action Section -->
<section id="financing-cta" class="py-5 text-center bg-dark fade-in-up delay-5">
    <div class="container">
        <h2 class="section-title text-white">Ready to Drive Your Dream Car?</h2>
        <p class="lead text-white-75 mb-4">Get pre-approved for financing quickly and easily!</p>
        <a href="/financing" class="btn btn-primary btn-lg">Apply for Financing</a>
    </div>
</section>

<!-- Contact Information Section -->
<section id="contact-info" class="fade-in-up delay-5">
    <div class="container">
        <h3>Contact Us</h3>
        <div class="row justify-content-center">
            <div class="col-md-4 contact-detail">
                <i class="fas fa-map-marker-alt"></i>
                <p>1278 Washington St, Holliston MA 01746</p>
            </div>
            <div class="col-md-4 contact-detail">
                <i class="fas fa-phone"></i>
                <p>+1 (774)523-7860</p>
            </div>
            <div class="col-md-4 contact-detail">
                <i class="fas fa-envelope"></i>
                <p>contact@kingsautous.com</p>
            </div>
        </div>
        <p class="text-muted mt-4">Operating Hours: Mon-Fri: 9 AM - 6 PM | Sat: 10 AM - 4 PM | Sun: Closed</p>
    </div>
</section>

<!-- Floating Message Button -->
<button class="floating-message-btn" data-toggle="modal" data-target="#messageModal">
    <i class="fas fa-comments"></i>
</button>

<!-- Message Modal -->
<div class="modal fade" id="messageModal" tabindex="-1" role="dialog" aria-labelledby="messageModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageModalLabel">Send Us a Message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="contactName">Name</label>
                        <input type="text" class="form-control" id="contactName" placeholder="Your Name">
                    </div>
                    <div class="form-group">
                        <label for="contactEmail">Email address</label>
                        <input type="email" class="form-control" id="contactEmail" placeholder="name@example.com">
                    </div>
                    <div class="form-group">
                        <label for="contactMessage">Message</label>
                        <textarea class="form-control" id="contactMessage" rows="3" placeholder="Your message..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Send Message</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for dynamic Model filter and Infinite Carousel -->
<script>
    // Converts the JSON string of modelsByBrand back to a JavaScript object
    let modelsByBrand = {};
    try {
        const modelsByBrandString = '{{{modelsByBrand}}}';
        modelsByBrand = JSON.parse(modelsByBrandString || '{}');
    } catch (e) {
        console.error("Error parsing models by brand JSON:", e);
        modelsByBrand = {};
    }

    const makeFilter = document.getElementById('makeFilter');
    const modelFilter = document.getElementById('modelFilter');

    // Function to populate the model dropdown
    function populateModelFilter(selectedBrand) {
        modelFilter.innerHTML = '<option value="">Model</option>'; // Clear previous options
        modelFilter.disabled = true; // Disable model filter by default

        if (selectedBrand && modelsByBrand[selectedBrand]) {
            modelsByBrand[selectedBrand].forEach(model => {
                const option = document.createElement('option');
                option.value = model;
                option.textContent = model;
                modelFilter.appendChild(option);
            });
            modelFilter.disabled = false; // Enable if models exist
        }
    }

    // Event listener for the make filter
    makeFilter.addEventListener('change', function() {
        populateModelFilter(this.value);
    });

    // Logic to pre-select filters if there are URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const initialMake = urlParams.get('make');
    const initialModel = urlParams.get('model');

    if (initialMake) {
        makeFilter.value = initialMake;
        populateModelFilter(initialMake);

        if (initialModel) {
            setTimeout(() => {
                modelFilter.value = initialModel;
            }, 100);
        }
    }

    // Scroll Reveal Effect JavaScript
    const fadeInElements = document.querySelectorAll('.fade-in-up');

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('revealed');
                observer.unobserve(entry.target); // Stop observing once revealed
            }
        });
    }, {
        threshold: 0.1 // Trigger when 10% of the element is visible
    });

    fadeInElements.forEach(element => {
        observer.observe(element);
    });

// ============================================
// INFINITE CAROUSEL CLASS - TEMPO AJUSTADO PARA 2s
// ============================================
class InfiniteCarousel {
    constructor(selector) {
        this.carousel = document.querySelector(selector);
        if (!this.carousel) return;
        
        this.carouselInner = this.carousel.querySelector('.featured-carousel-inner');
        this.items = Array.from(this.carousel.querySelectorAll('.featured-car-item'));
        this.originalItems = [...this.items];
        this.currentIndex = 0;
        this.itemWidth = 0;
        this.visibleItems = 1;
        this.totalItems = this.originalItems.length;
        this.isTransitioning = false;
        this.autoPlayInterval = null;
        this.autoPlayDelay = 2000; // ALTERADO: de 4000ms para 2000ms (2 segundos)

        if (this.totalItems > 0) {
            this.init();
        }
    }

    init() {
        this.calculateDimensions();
        this.createClones();
        this.createIndicators();
        this.setInitialPosition();
        this.bindEvents();
        this.startAutoPlay();
        this.updateActiveStates();
    }

    calculateDimensions() {
        // Calcula quantos itens são visíveis baseado na largura da tela
        const containerWidth = this.carousel.offsetWidth;
        const item = this.items[0];
        if (!item) return;

        this.itemWidth = item.offsetWidth + parseInt(window.getComputedStyle(item).marginRight);
        this.visibleItems = Math.max(1, Math.floor(containerWidth / this.itemWidth));
        
        // Ajusta para dispositivos móveis
        if (window.innerWidth <= 576) {
            this.visibleItems = 1;
        } else if (window.innerWidth <= 768) {
            this.visibleItems = Math.min(2, this.visibleItems);
        } else if (window.innerWidth <= 992) {
            this.visibleItems = Math.min(3, this.visibleItems);
        }
    }

    createClones() {
        // Remove clones existentes
        this.carouselInner.innerHTML = '';
        
        // Cria clones suficientes para o efeito infinito
        const clonesNeeded = Math.max(this.visibleItems, 3);
        
        // Adiciona clones dos últimos itens no início
        for (let i = 0; i < clonesNeeded; i++) {
            const cloneIndex = this.totalItems - clonesNeeded + i;
            const clone = this.originalItems[cloneIndex].cloneNode(true);
            clone.classList.add('clone');
            this.carouselInner.appendChild(clone);
        }
        
        // Adiciona os itens originais
        this.originalItems.forEach(item => {
            const clone = item.cloneNode(true);
            this.carouselInner.appendChild(clone);
        });
        
        // Adiciona clones dos primeiros itens no final
        for (let i = 0; i < clonesNeeded; i++) {
            const clone = this.originalItems[i].cloneNode(true);
            clone.classList.add('clone');
            this.carouselInner.appendChild(clone);
        }
        
        // Atualiza a lista de itens
        this.items = Array.from(this.carouselInner.querySelectorAll('.featured-car-item'));
        this.clonesAtStart = clonesNeeded;
    }

    createIndicators() {
        const indicatorsContainer = document.getElementById('carouselIndicators');
        if (!indicatorsContainer) return;

        indicatorsContainer.innerHTML = '';
        
        for (let i = 0; i < this.totalItems; i++) {
            const indicator = document.createElement('div');
            indicator.classList.add('indicator');
            if (i === 0) indicator.classList.add('active');
            indicator.addEventListener('click', () => this.goToSlide(i));
            indicatorsContainer.appendChild(indicator);
        }
        
        this.indicators = Array.from(indicatorsContainer.querySelectorAll('.indicator'));
    }

    setInitialPosition() {
        const initialOffset = -this.clonesAtStart * this.itemWidth;
        this.carouselInner.style.transform = `translateX(${initialOffset}px)`;
        this.carouselInner.style.transition = 'none';
    }

    updateActiveStates() {
        // Remove active class de todos os itens
        this.items.forEach(item => item.classList.remove('active'));
        
        // Adiciona active class ao item central
        const activeIndex = this.clonesAtStart + this.currentIndex;
        if (this.items[activeIndex]) {
            this.items[activeIndex].classList.add('active');
        }
        
        // Atualiza indicadores
        if (this.indicators) {
            this.indicators.forEach((indicator, index) => {
                indicator.classList.toggle('active', index === this.currentIndex);
            });
        }
    }

    move(direction) {
        if (this.isTransitioning) return;
        
        this.isTransitioning = true;
        this.stopAutoPlay();
        
        this.currentIndex += direction;
        const offset = -(this.clonesAtStart + this.currentIndex) * this.itemWidth;
        
        this.carouselInner.style.transition = 'transform 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
        this.carouselInner.style.transform = `translateX(${offset}px)`;
        
        setTimeout(() => {
            this.handleInfiniteLoop();
            this.updateActiveStates();
            this.isTransitioning = false;
            this.startAutoPlay();
        }, 500);
    }

    handleInfiniteLoop() {
        if (this.currentIndex >= this.totalItems) {
            this.currentIndex = 0;
            const offset = -this.clonesAtStart * this.itemWidth;
            this.carouselInner.style.transition = 'none';
            this.carouselInner.style.transform = `translateX(${offset}px)`;
        } else if (this.currentIndex < 0) {
            this.currentIndex = this.totalItems - 1;
            const offset = -(this.clonesAtStart + this.currentIndex) * this.itemWidth;
            this.carouselInner.style.transition = 'none';
            this.carouselInner.style.transform = `translateX(${offset}px)`;
        }
    }

    goToSlide(index) {
        if (this.isTransitioning || index === this.currentIndex) return;
        
        const direction = index > this.currentIndex ? 1 : -1;
        const steps = Math.abs(index - this.currentIndex);
        
        for (let i = 0; i < steps; i++) {
            setTimeout(() => this.move(direction), i * 100);
        }
    }

    startAutoPlay() {
        this.stopAutoPlay();
        this.autoPlayInterval = setInterval(() => {
            this.move(1);
        }, this.autoPlayDelay); // Agora usa 2000ms (2 segundos)
    }

    stopAutoPlay() {
        if (this.autoPlayInterval) {
            clearInterval(this.autoPlayInterval);
            this.autoPlayInterval = null;
        }
    }

    bindEvents() {
        // Pause auto-play on hover
        this.carousel.addEventListener('mouseenter', () => this.stopAutoPlay());
        this.carousel.addEventListener('mouseleave', () => this.startAutoPlay());
        
        // Touch events for mobile
        let startX = 0;
        let isDown = false;
        
        this.carousel.addEventListener('touchstart', (e) => {
            startX = e.touches[0].clientX;
            isDown = true;
            this.stopAutoPlay();
        });
        
        this.carousel.addEventListener('touchmove', (e) => {
            if (!isDown) return;
            e.preventDefault();
        });
        
        this.carousel.addEventListener('touchend', (e) => {
            if (!isDown) return;
            isDown = false;
            
            const endX = e.changedTouches[0].clientX;
            const diffX = startX - endX;
            
            if (Math.abs(diffX) > 50) {
                if (diffX > 0) {
                    this.move(1); // Swipe left - next
                } else {
                    this.move(-1); // Swipe right - previous
                }
            }
            
            this.startAutoPlay();
        });
        
        // Resize event
        window.addEventListener('resize', () => {
            clearTimeout(this.resizeTimeout);
            this.resizeTimeout = setTimeout(() => {
                this.calculateDimensions();
                this.createClones();
                this.setInitialPosition();
                this.updateActiveStates();
            }, 250);
        });
    }

    destroy() {
        this.stopAutoPlay();
        if (this.resizeTimeout) {
            clearTimeout(this.resizeTimeout);
        }
    }
}

    // Funções globais para os botões
    function moveCarousel(direction) {
        if (window.featuredCarousel) {
            window.featuredCarousel.move(direction);
        }
    }

    // Inicializa o carrossel quando o DOM estiver pronto
    document.addEventListener('DOMContentLoaded', function() {
        // Pequeno delay para garantir que todos os elementos estejam renderizados
        setTimeout(() => {
            window.featuredCarousel = new InfiniteCarousel('.featured-carousel-wrapper');
        }, 100);
    });
</script>